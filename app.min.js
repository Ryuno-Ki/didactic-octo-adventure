"use strict";var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!b||c.length!==b);d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h.return&&h.return()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){var a=document.querySelector("input[type='file']"),b=document.querySelector("#canvas-preview"),c=function(a){var c=b.parentElement.querySelector(a);return null===c&&(c=document.createElement("canvas"),b.parentElement.appendChild(c)),c.id=a,c.height=b.height,c.width=b.width,c},d=function(a){var b=_slicedToArray(a,3),c=b[0],d=b[1],e=b[2];if(c>255||d>255||e>255)throw"Invalid colour!";return(c<<16|d<<8|e).toString(16)},e=function(a){for(var b=a.data.length,c=[],d=0;b>d;d+=4)c.push(a.data.subarray(d,d+3));return c},f=function(a,c){var f=a.getContext("2d"),g=x=y=null,h=e(b.getContext("2d").getImageData(0,0,a.width,a.height));console.log(b.width,b.height,h.length),h.forEach(function(a,e){switch(c){case"red":g="#"+("000000"+function(a){return d([a,0,0])}(a[0])).slice(-6);break;case"green":g="#"+("000000"+d([0,a[1],0])).slice(-6);break;case"blue":g="#"+("000000"+d([0,0,a[2]])).slice(-6)}f.fillStyle=g,x=e%b.width,y=Math.floor(e/b.width),f.fillRect(x,y,1,1)})},g=function(a){var b=c("red");f(b,"red")},h=function(){var c=a.files[0],d=b.getContext("2d"),e=new FileReader;e.onloadend=function(){var a=new Image;a.onload=function(){b.width=a.width,b.height=a.height,d.drawImage(a,0,0),g(a)},a.src=e.result},e.readAsDataURL(c)};a.addEventListener("change",h)}();
//# sourceMappingURL=app.min.js.map