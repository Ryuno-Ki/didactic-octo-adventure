"use strict";var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!b||c.length!==b);d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h.return&&h.return()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){var a=document.querySelector("input[type='file']"),b=document.querySelector("#canvas-preview"),c=function(a){var c=b.parentElement.querySelector(a);return null===c&&(c=document.createElement("canvas"),b.parentElement.appendChild(c)),c.id=a,c.height=b.height,c.width=b.width,c},d=function(a,c){var d=a.getContext("2d");console.log("Painting",a,c);var e=void 0,f=void 0,g=void 0,h=void 0,i=!0,j=!1,k=void 0;try{for(var l,m=c.entries()[Symbol.iterator]();!(i=(l=m.next()).done);i=!0){var n=_slicedToArray(l.value,2);e=n[0],f=n[1],console.log(e,f),d.fillStyle=f,g=e.index%b.width,h=Math.floor(e.index/b.width),d.fillRect(g,h,1,1)}}catch(a){j=!0,k=a}finally{try{!i&&m.return&&m.return()}finally{if(j)throw k}}},e=function(a,c){var e=(a.getContext("2d"),void 0),f=b.getContext("2d").getImageData(0,0,a.width,a.height);if(window.Worker){var g=new Worker("image-processing.min.js");g.postMessage([c,f]),g.onmessage=function(b){e=b.data,d(a,e)}}},f=function(a){var b=c("red");e(b,"red");var d=c("green");e(d,"green");var f=c("blue");e(f,"blue")},g=function(){var c=a.files[0],d=b.getContext("2d"),e=new FileReader;e.onloadend=function(){var a=new Image;a.onload=function(){b.width=a.width,b.height=a.height,d.drawImage(a,0,0),f(a)},a.src=e.result},e.readAsDataURL(c)};a.addEventListener("change",g)}();
//# sourceMappingURL=app.min.js.map