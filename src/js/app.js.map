{"version":3,"sources":["../../es6/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function() {\n    let upload = document.querySelector(\"input[type='file']\")\n    let canvas = document.querySelector(\"#canvas-preview\")\n\n    let previewImage = () => {\n        let file = upload.files[0]\n        let preview = document.querySelector(\"#image-preview\")\n        let ctx = canvas.getContext(\"2d\")\n        let reader = new FileReader()\n\n        console.log(\"Upload\", upload, \"File\", file, \"Preview\", preview)\n\n        reader.onloadend = () => {\n            let img = new Image()\n            img.onload = () => {\n                canvas.width = img.width\n                canvas.height = img.height\n                ctx.drawImage(img, 0, 0)\n            }\n            img.src = reader.result\n            preview.src = reader.result\n            return\n        }\n\n        if (preview) {\n            reader.readAsDataURL(file)\n        } else {\n            preview.src = \"\"\n        }\n    }\n\n    // Taken from https://stackoverflow.com/a/6736135\n    let findPos = (element) => {\n        let currentLeft = 0\n        let currentTop = 0\n        if (element.offsetParent) {\n            do {\n                currentLeft += element.offsetLeft\n                currentTop += element.offsetTop\n            } while (element = element.parentOffset)\n            return {\n                x: currentLeft,\n                y: currentTop\n            }\n        }\n        return undefined\n    }\n\n    let rgb2hex = (rgb) => {\n        let [r, g, b] = rgb\n        if (r > 255 || g > 255 || b > 255) {\n            throw \"Invalid colour!\"\n        }\n        return ((r << 16) | (g << 8) | b).toString(16)\n    }\n\n    let extractPixel = (event) => {\n        let canvas = event.target\n        let pos = findPos(canvas)\n        let x = event.pageX - pos.x\n        let y = event.pageY - pos.y\n        let coord = `x=${x}, y=${y}`\n        let ctx = canvas.getContext(\"2d\")\n        let pixel = ctx.getImageData(x, y, 1, 1).data\n        let hex = \"#\" + (\"000000\" + rgb2hex(pixel)).slice(-6)\n        console.log(pos, event, coord, hex)\n    }\n\n    upload.addEventListener(\"change\", previewImage)\n    canvas.addEventListener(\"mousemove\", extractPixel)\n})();\n"]}