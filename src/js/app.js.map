{"version":3,"sources":["../../es6/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function() {\n    let upload = document.querySelector(\"input[type='file']\")\n    let canvas = document.querySelector(\"#canvas-preview\")\n\n    let createImageSlice = (id) => {\n        let newCanvas = canvas.parentElement.querySelector(id)\n        if (newCanvas === null) {\n            newCanvas = document.createElement(\"canvas\")\n            canvas.parentElement.appendChild(newCanvas)\n        }\n        newCanvas.id = id\n        newCanvas.height = canvas.height\n        newCanvas.width = canvas.width\n        return newCanvas\n    }\n\n    let rgb2hex = (rgb) => {\n        let [r, g, b] = rgb\n        if (r > 255 || g > 255 || b > 255) {\n            throw \"Invalid colour!\"\n        }\n        return ((r << 16) | (g << 8) | b).toString(16)\n    }\n\n    let image2matrix = (image) => {\n        let rows = image.data.length\n        let matrix = []\n        for (let j = 0; j < rows; j += 4) {\n            matrix.push(image.data.subarray(j, j+3))\n        }\n        return matrix\n    }\n\n    let sliceCanvasColour = (c, colour) => {\n        let ctx = c.getContext(\"2d\")\n        let hex, x, y\n        let matrix = image2matrix(canvas.getContext(\"2d\").getImageData(0, 0, c.width, c.height))\n        matrix.forEach((triplet, i) => {\n            switch (colour) {\n                case \"red\":\n                    hex = \"#\" + (\"000000\" + ((redComponent) => {\n                        return rgb2hex([redComponent, 0, 0])\n                    })(triplet[0])).slice(-6)\n                    break\n                case \"green\":\n                    hex = \"#\" + (\"000000\" + ((greenComponent) => {\n                        return rgb2hex([0, greenComponent, 0])\n                    })(triplet[1])).slice(-6)\n                    break\n                case \"blue\":\n                    hex = \"#\" + (\"000000\" + ((blueComponent) => {\n                        return rgb2hex([0, 0, blueComponent])\n                    })(triplet[2])).slice(-6)\n                    break\n            }\n            ctx.fillStyle = hex\n            x = i % canvas.width\n            y = Math.floor(i/canvas.width)\n            ctx.fillRect(x, y, 1, 1)\n        })\n    }\n\n    let sliceCanvas = (img) => {\n        let red = createImageSlice(\"red\")\n        sliceCanvasColour(red, \"red\")\n        let green = createImageSlice(\"green\")\n        sliceCanvasColour(green, \"green\")\n        let blue = createImageSlice(\"blue\")\n        sliceCanvasColour(blue, \"blue\")\n    }\n\n    let previewImage = () => {\n        let file = upload.files[0]\n        let ctx = canvas.getContext(\"2d\")\n        let reader = new FileReader()\n\n        reader.onloadend = () => {\n            let img = new Image()\n            img.onload = () => {\n                canvas.width = img.width\n                canvas.height = img.height\n                ctx.drawImage(img, 0, 0)\n                sliceCanvas(img)\n            }\n            img.src = reader.result\n            return\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    // Taken from https://stackoverflow.com/a/6736135\n    let findPos = (element) => {\n        let currentLeft = 0\n        let currentTop = 0\n        if (element.offsetParent) {\n            do {\n                currentLeft += element.offsetLeft\n                currentTop += element.offsetTop\n            } while (element = element.parentOffset)\n            return {\n                x: currentLeft,\n                y: currentTop\n            }\n        }\n        return undefined\n    }\n\n    let extractPixel = (event) => {\n        let canvas = event.target\n        let pos = findPos(canvas)\n        let x = event.pageX - pos.x\n        let y = event.pageY - pos.y\n        let coord = `x=${x}, y=${y}`\n        let ctx = canvas.getContext(\"2d\")\n        let pixel = ctx.getImageData(x, y, 1, 1).data\n        let hex = \"#\" + (\"000000\" + rgb2hex(pixel)).slice(-6)\n        let paintArea = document.querySelector(\"#colour-value\")\n        paintArea.style.backgroundColor = hex\n        console.log(pos, event, coord, hex, paintArea)\n    }\n\n    upload.addEventListener(\"change\", previewImage)\n    // canvas.addEventListener(\"mousemove\", extractPixel)\n})();\n"]}